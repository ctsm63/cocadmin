[0m[1mdata.aws_vpc.my_vpc: Reading...[0m[0m
[0m[1mdata.aws_vpc.my_vpc: Read complete after 2s [id=vpc-0791922d124560af0][0m
[0m[1mdata.aws_subnets.my_subnets: Reading...[0m[0m
[0m[1mdata.aws_subnets.my_subnets: Read complete after 0s [id=eu-west-3][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # data.template_file.userdata[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "template_file" "userdata" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            #!/bin/bash
            apt update
            apt install -y docker.io
            docker run -d -p 5000:5000 -e MONGO_URI="${MONGO_URI}" cocadmin/2048-mern
        EOT
      [32m+[0m[0m vars     = {
          [32m+[0m[0m "MONGO_URI" = (known after apply)
        }
    }

[1m  # aws_autoscaling_attachment.asg_attachment[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_attachment" "asg_attachment" {
      [32m+[0m[0m autoscaling_group_name = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m lb_target_group_arn    = (known after apply)
    }

[1m  # aws_autoscaling_group.app_server_asg[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "app_server_asg" {
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m availability_zones        = (known after apply)
      [32m+[0m[0m default_cooldown          = (known after apply)
      [32m+[0m[0m desired_capacity          = 1
      [32m+[0m[0m force_delete              = false
      [32m+[0m[0m force_delete_warm_pool    = false
      [32m+[0m[0m health_check_grace_period = 300
      [32m+[0m[0m health_check_type         = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m max_size                  = 2
      [32m+[0m[0m metrics_granularity       = "1Minute"
      [32m+[0m[0m min_size                  = 1
      [32m+[0m[0m name                      = (known after apply)
      [32m+[0m[0m name_prefix               = (known after apply)
      [32m+[0m[0m predicted_capacity        = (known after apply)
      [32m+[0m[0m protect_from_scale_in     = false
      [32m+[0m[0m service_linked_role_arn   = (known after apply)
      [32m+[0m[0m vpc_zone_identifier       = [
          [32m+[0m[0m "subnet-05e98ab76b1125cca",
          [32m+[0m[0m "subnet-0bc45b3f8281e5b22",
          [32m+[0m[0m "subnet-0bd69807d41df7d90",
        ]
      [32m+[0m[0m wait_for_capacity_timeout = "10m"
      [32m+[0m[0m warm_pool_size            = (known after apply)

      [32m+[0m[0m launch_template {
          [32m+[0m[0m id      = (known after apply)
          [32m+[0m[0m name    = (known after apply)
          [32m+[0m[0m version = "$Latest"
        }

      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "Name"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "app_2048"
        }
    }

[1m  # aws_autoscaling_policy.cpu_scaling_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_policy" "cpu_scaling_policy" {
      [32m+[0m[0m adjustment_type         = "ChangeInCapacity"
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m autoscaling_group_name  = (known after apply)
      [32m+[0m[0m enabled                 = true
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metric_aggregation_type = (known after apply)
      [32m+[0m[0m name                    = "cpu-target-tracking-policy"
      [32m+[0m[0m policy_type             = "TargetTrackingScaling"

      [32m+[0m[0m target_tracking_configuration {
          [32m+[0m[0m disable_scale_in = false
          [32m+[0m[0m target_value     = 20

          [32m+[0m[0m predefined_metric_specification {
              [32m+[0m[0m predefined_metric_type = "ASGAverageCPUUtilization"
            }
        }
    }

[1m  # aws_docdb_cluster.mydb[0m will be created
[0m  [32m+[0m[0m resource "aws_docdb_cluster" "mydb" {
      [32m+[0m[0m apply_immediately               = (known after apply)
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m availability_zones              = (known after apply)
      [32m+[0m[0m backup_retention_period         = 1
      [32m+[0m[0m cluster_identifier              = "mydb"
      [32m+[0m[0m cluster_identifier_prefix       = (known after apply)
      [32m+[0m[0m cluster_members                 = (known after apply)
      [32m+[0m[0m cluster_resource_id             = (known after apply)
      [32m+[0m[0m db_cluster_parameter_group_name = (known after apply)
      [32m+[0m[0m db_subnet_group_name            = (known after apply)
      [32m+[0m[0m endpoint                        = (known after apply)
      [32m+[0m[0m engine                          = "docdb"
      [32m+[0m[0m engine_version                  = (known after apply)
      [32m+[0m[0m hosted_zone_id                  = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m kms_key_id                      = (known after apply)
      [32m+[0m[0m master_password                 = (sensitive value)
      [32m+[0m[0m master_username                 = "username"
      [32m+[0m[0m port                            = 27017
      [32m+[0m[0m preferred_backup_window         = (known after apply)
      [32m+[0m[0m preferred_maintenance_window    = (known after apply)
      [32m+[0m[0m reader_endpoint                 = (known after apply)
      [32m+[0m[0m skip_final_snapshot             = true
      [32m+[0m[0m tags_all                        = (known after apply)
      [32m+[0m[0m vpc_security_group_ids          = (known after apply)
    }

[1m  # aws_docdb_cluster_instance.docdb_instance[0][0m will be created
[0m  [32m+[0m[0m resource "aws_docdb_cluster_instance" "docdb_instance" {
      [32m+[0m[0m apply_immediately               = true
      [32m+[0m[0m arn                             = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade      = true
      [32m+[0m[0m availability_zone               = (known after apply)
      [32m+[0m[0m ca_cert_identifier              = (known after apply)
      [32m+[0m[0m cluster_identifier              = (known after apply)
      [32m+[0m[0m db_subnet_group_name            = (known after apply)
      [32m+[0m[0m dbi_resource_id                 = (known after apply)
      [32m+[0m[0m enable_performance_insights     = (known after apply)
      [32m+[0m[0m endpoint                        = (known after apply)
      [32m+[0m[0m engine                          = "docdb"
      [32m+[0m[0m engine_version                  = (known after apply)
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m identifier                      = "docdb-instance-0"
      [32m+[0m[0m identifier_prefix               = (known after apply)
      [32m+[0m[0m instance_class                  = "db.t3.medium"
      [32m+[0m[0m kms_key_id                      = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id = (known after apply)
      [32m+[0m[0m port                            = (known after apply)
      [32m+[0m[0m preferred_backup_window         = (known after apply)
      [32m+[0m[0m preferred_maintenance_window    = (known after apply)
      [32m+[0m[0m promotion_tier                  = 0
      [32m+[0m[0m publicly_accessible             = (known after apply)
      [32m+[0m[0m storage_encrypted               = (known after apply)
      [32m+[0m[0m tags_all                        = (known after apply)
      [32m+[0m[0m writer                          = (known after apply)
    }

[1m  # aws_key_pair.mysshkey[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "mysshkey" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = "mykey"
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEcQDG0+BY2ekk8xbXoQQOQmcTP2k6ncwsxCRxPJ0b03"
      [32m+[0m[0m tags_all        = (known after apply)
    }

[1m  # aws_launch_template.app_server[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_template" "app_server" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_version        = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m image_id               = "ami-04ec97dc75ac850b1"
      [32m+[0m[0m instance_type          = "t2.micro"
      [32m+[0m[0m key_name               = "mykey"
      [32m+[0m[0m latest_version         = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "app-server-"
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m user_data              = (known after apply)
      [32m+[0m[0m vpc_security_group_ids = (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m tag_specifications {
          [32m+[0m[0m resource_type = "instance"
          [32m+[0m[0m tags          = {
              [32m+[0m[0m "Name" = "delete"
            }
        }
    }

[1m  # aws_lb.app_lb[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "app_lb" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "app-lb"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = [
          [32m+[0m[0m "subnet-05e98ab76b1125cca",
          [32m+[0m[0m "subnet-0bc45b3f8281e5b22",
          [32m+[0m[0m "subnet-0bd69807d41df7d90",
        ]
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)

      [32m+[0m[0m subnet_mapping (known after apply)
    }

[1m  # aws_lb_listener.app_lb_listener[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "app_lb_listener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # aws_lb_target_group.app_lb_target_group[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_lb_target_group" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "app-lb-tg"
      [32m+[0m[0m port                               = 5000
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = "vpc-0791922d124560af0"

      [32m+[0m[0m health_check (known after apply)

      [32m+[0m[0m stickiness (known after apply)

      [32m+[0m[0m target_failover (known after apply)
    }

[1m  # aws_security_group.alb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for ALB"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "alb-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.app_server[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "app_server" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Authoriser le traffic sur port 5000 depuis le LB"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 5000
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 5000
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m from_port        = 5000
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 5000
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "app_2048"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.docdb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "docdb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for DocumentDB"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m from_port        = 27017
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 27017
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "docdb-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1mPlan:[0m 13 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m alb_endpoint = (known after apply)
[0m[1maws_key_pair.mysshkey: Creating...[0m[0m
[0m[1maws_lb_target_group.app_lb_target_group: Creating...[0m[0m
[0m[1maws_security_group.alb: Creating...[0m[0m
[0m[1maws_key_pair.mysshkey: Creation complete after 0s [id=mykey][0m
[0m[1maws_lb_target_group.app_lb_target_group: Creation complete after 1s [id=arn:aws:elasticloadbalancing:eu-west-3:225989364215:targetgroup/app-lb-tg/0b54386dfde58556][0m
[0m[1maws_security_group.alb: Creation complete after 3s [id=sg-016e88317d3c351aa][0m
[0m[1maws_security_group.app_server: Creating...[0m[0m
[0m[1maws_lb.app_lb: Creating...[0m[0m
[0m[1maws_security_group.app_server: Creation complete after 3s [id=sg-0725fa2812d4227d1][0m
[0m[1maws_security_group.docdb: Creating...[0m[0m
[0m[1maws_security_group.docdb: Creation complete after 3s [id=sg-04d45b23eb95ed622][0m
[0m[1maws_docdb_cluster.mydb: Creating...[0m[0m
[0m[1maws_lb.app_lb: Still creating... [00m10s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Still creating... [00m10s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [00m20s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Still creating... [00m20s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [00m30s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Still creating... [00m30s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [00m40s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Still creating... [00m40s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [00m50s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Still creating... [00m50s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m00s elapsed][0m[0m
[0m[1maws_docdb_cluster.mydb: Creation complete after 55s [id=mydb][0m
[0m[1mdata.template_file.userdata: Reading...[0m[0m
[0m[1mdata.template_file.userdata: Read complete after 0s [id=c64e8c0dc3337887aae458504eae57963cc5b4c2595fe9fc12979921a2439b2d][0m
[0m[1maws_launch_template.app_server: Creating...[0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Creating...[0m[0m
[0m[1maws_launch_template.app_server: Creation complete after 1s [id=lt-0b44f84593baff545][0m
[0m[1maws_autoscaling_group.app_server_asg: Creating...[0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m10s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [00m10s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [00m10s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m20s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [00m20s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [00m20s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m30s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [00m30s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [00m30s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m40s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [00m40s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [00m40s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [01m50s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [00m50s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [00m50s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m00s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m00s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m00s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m10s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m10s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m10s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m20s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m20s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m20s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m30s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m30s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m30s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m40s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m40s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m40s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [02m50s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [01m50s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [01m50s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [03m00s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m00s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m00s elapsed][0m[0m
[0m[1maws_lb.app_lb: Still creating... [03m10s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m10s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m10s elapsed][0m[0m
[0m[1maws_lb.app_lb: Creation complete after 3m14s [id=arn:aws:elasticloadbalancing:eu-west-3:225989364215:loadbalancer/app/app-lb/da57cd6bedcd8d84][0m
[0m[1maws_lb_listener.app_lb_listener: Creating...[0m[0m
[0m[1maws_lb_listener.app_lb_listener: Creation complete after 0s [id=arn:aws:elasticloadbalancing:eu-west-3:225989364215:listener/app/app-lb/da57cd6bedcd8d84/7aa4059a5765f4ff][0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m20s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m20s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m30s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m30s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m40s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m40s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [02m50s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [02m50s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [03m00s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [03m00s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [03m10s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [03m10s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [03m20s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [03m20s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [03m30s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Still creating... [03m30s elapsed][0m[0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Still creating... [03m40s elapsed][0m[0m
[0m[1maws_autoscaling_group.app_server_asg: Creation complete after 3m39s [id=terraform-20250623193047804100000003][0m
[0m[1maws_autoscaling_attachment.asg_attachment: Creating...[0m[0m
[0m[1maws_autoscaling_policy.cpu_scaling_policy: Creating...[0m[0m
[0m[1maws_autoscaling_policy.cpu_scaling_policy: Creation complete after 0s [id=cpu-target-tracking-policy][0m
[0m[1maws_autoscaling_attachment.asg_attachment: Creation complete after 0s [id=terraform-20250623193047804100000003-20250623193428124100000004][0m
[0m[1maws_docdb_cluster_instance.docdb_instance[0]: Creation complete after 3m48s [id=docdb-instance-0][0m
[0m[1m[32m
Apply complete! Resources: 13 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0malb_endpoint = "app-lb-1495976883.eu-west-3.elb.amazonaws.com"
